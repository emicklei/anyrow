// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: fieldset.proto

// protofmt -w  fieldset.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RowSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName     string          `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	ColumnSchemas []*ColumnSchema `protobuf:"bytes,2,rep,name=column_schemas,json=columnSchemas,proto3" json:"column_schemas,omitempty"`
	Rows          []*Row          `protobuf:"bytes,3,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *RowSet) Reset() {
	*x = RowSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fieldset_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RowSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowSet) ProtoMessage() {}

func (x *RowSet) ProtoReflect() protoreflect.Message {
	mi := &file_fieldset_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowSet.ProtoReflect.Descriptor instead.
func (*RowSet) Descriptor() ([]byte, []int) {
	return file_fieldset_proto_rawDescGZIP(), []int{0}
}

func (x *RowSet) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *RowSet) GetColumnSchemas() []*ColumnSchema {
	if x != nil {
		return x.ColumnSchemas
	}
	return nil
}

func (x *RowSet) GetRows() []*Row {
	if x != nil {
		return x.Rows
	}
	return nil
}

type ColumnSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TypeName     string `protobuf:"bytes,2,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
	IsNullable   bool   `protobuf:"varint,3,opt,name=is_nullable,json=isNullable,proto3" json:"is_nullable,omitempty"`
	IsPrimarykey bool   `protobuf:"varint,4,opt,name=is_primarykey,json=isPrimarykey,proto3" json:"is_primarykey,omitempty"`
}

func (x *ColumnSchema) Reset() {
	*x = ColumnSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fieldset_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnSchema) ProtoMessage() {}

func (x *ColumnSchema) ProtoReflect() protoreflect.Message {
	mi := &file_fieldset_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnSchema.ProtoReflect.Descriptor instead.
func (*ColumnSchema) Descriptor() ([]byte, []int) {
	return file_fieldset_proto_rawDescGZIP(), []int{1}
}

func (x *ColumnSchema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ColumnSchema) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *ColumnSchema) GetIsNullable() bool {
	if x != nil {
		return x.IsNullable
	}
	return false
}

func (x *ColumnSchema) GetIsPrimarykey() bool {
	if x != nil {
		return x.IsPrimarykey
	}
	return false
}

type Row struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Columns []*ColumnValue `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
}

func (x *Row) Reset() {
	*x = Row{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fieldset_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Row) ProtoMessage() {}

func (x *Row) ProtoReflect() protoreflect.Message {
	mi := &file_fieldset_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Row.ProtoReflect.Descriptor instead.
func (*Row) Descriptor() ([]byte, []int) {
	return file_fieldset_proto_rawDescGZIP(), []int{2}
}

func (x *Row) GetColumns() []*ColumnValue {
	if x != nil {
		return x.Columns
	}
	return nil
}

type ColumnValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// https://www.w3schools.com/js/js_json_datatypes.asp
	//
	// Types that are assignable to JsonValue:
	//	*ColumnValue_StringValue
	//	*ColumnValue_NumberFloatValue
	//	*ColumnValue_NumberIntegerValue
	//	*ColumnValue_ObjectValue
	//	*ColumnValue_ArrayValue
	//	*ColumnValue_BoolValue
	JsonValue isColumnValue_JsonValue `protobuf_oneof:"json_value"`
}

func (x *ColumnValue) Reset() {
	*x = ColumnValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fieldset_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnValue) ProtoMessage() {}

func (x *ColumnValue) ProtoReflect() protoreflect.Message {
	mi := &file_fieldset_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnValue.ProtoReflect.Descriptor instead.
func (*ColumnValue) Descriptor() ([]byte, []int) {
	return file_fieldset_proto_rawDescGZIP(), []int{3}
}

func (m *ColumnValue) GetJsonValue() isColumnValue_JsonValue {
	if m != nil {
		return m.JsonValue
	}
	return nil
}

func (x *ColumnValue) GetStringValue() string {
	if x, ok := x.GetJsonValue().(*ColumnValue_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *ColumnValue) GetNumberFloatValue() float32 {
	if x, ok := x.GetJsonValue().(*ColumnValue_NumberFloatValue); ok {
		return x.NumberFloatValue
	}
	return 0
}

func (x *ColumnValue) GetNumberIntegerValue() int64 {
	if x, ok := x.GetJsonValue().(*ColumnValue_NumberIntegerValue); ok {
		return x.NumberIntegerValue
	}
	return 0
}

func (x *ColumnValue) GetObjectValue() string {
	if x, ok := x.GetJsonValue().(*ColumnValue_ObjectValue); ok {
		return x.ObjectValue
	}
	return ""
}

func (x *ColumnValue) GetArrayValue() string {
	if x, ok := x.GetJsonValue().(*ColumnValue_ArrayValue); ok {
		return x.ArrayValue
	}
	return ""
}

func (x *ColumnValue) GetBoolValue() bool {
	if x, ok := x.GetJsonValue().(*ColumnValue_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

type isColumnValue_JsonValue interface {
	isColumnValue_JsonValue()
}

type ColumnValue_StringValue struct {
	StringValue string `protobuf:"bytes,1,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type ColumnValue_NumberFloatValue struct {
	NumberFloatValue float32 `protobuf:"fixed32,2,opt,name=number_float_value,json=numberFloatValue,proto3,oneof"`
}

type ColumnValue_NumberIntegerValue struct {
	NumberIntegerValue int64 `protobuf:"varint,3,opt,name=number_integer_value,json=numberIntegerValue,proto3,oneof"`
}

type ColumnValue_ObjectValue struct {
	ObjectValue string `protobuf:"bytes,4,opt,name=object_value,json=objectValue,proto3,oneof"`
}

type ColumnValue_ArrayValue struct {
	ArrayValue string `protobuf:"bytes,5,opt,name=array_value,json=arrayValue,proto3,oneof"`
}

type ColumnValue_BoolValue struct {
	BoolValue bool `protobuf:"varint,6,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

func (*ColumnValue_StringValue) isColumnValue_JsonValue() {}

func (*ColumnValue_NumberFloatValue) isColumnValue_JsonValue() {}

func (*ColumnValue_NumberIntegerValue) isColumnValue_JsonValue() {}

func (*ColumnValue_ObjectValue) isColumnValue_JsonValue() {}

func (*ColumnValue_ArrayValue) isColumnValue_JsonValue() {}

func (*ColumnValue_BoolValue) isColumnValue_JsonValue() {}

var File_fieldset_proto protoreflect.FileDescriptor

var file_fieldset_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x06, 0x61, 0x6e, 0x79, 0x72, 0x6f, 0x77, 0x22, 0x85, 0x01, 0x0a, 0x06, 0x52, 0x6f, 0x77,
	0x53, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x6e, 0x79,
	0x72, 0x6f, 0x77, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x52, 0x0d, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x12,
	0x1f, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x61, 0x6e, 0x79, 0x72, 0x6f, 0x77, 0x2e, 0x52, 0x6f, 0x77, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73,
	0x22, 0x85, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4e, 0x75, 0x6c, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x50, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x22, 0x34, 0x0a, 0x03, 0x52, 0x6f, 0x77, 0x12,
	0x2d, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x61, 0x6e, 0x79, 0x72, 0x6f, 0x77, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x22, 0x8d,
	0x02, 0x0a, 0x0b, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23,
	0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x66, 0x6c,
	0x6f, 0x61, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x48,
	0x00, 0x52, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x12, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0b,
	0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x72, 0x72, 0x61, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1f, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x42, 0x0c, 0x0a, 0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x05,
	0x5a, 0x03, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fieldset_proto_rawDescOnce sync.Once
	file_fieldset_proto_rawDescData = file_fieldset_proto_rawDesc
)

func file_fieldset_proto_rawDescGZIP() []byte {
	file_fieldset_proto_rawDescOnce.Do(func() {
		file_fieldset_proto_rawDescData = protoimpl.X.CompressGZIP(file_fieldset_proto_rawDescData)
	})
	return file_fieldset_proto_rawDescData
}

var file_fieldset_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_fieldset_proto_goTypes = []interface{}{
	(*RowSet)(nil),       // 0: anyrow.RowSet
	(*ColumnSchema)(nil), // 1: anyrow.ColumnSchema
	(*Row)(nil),          // 2: anyrow.Row
	(*ColumnValue)(nil),  // 3: anyrow.ColumnValue
}
var file_fieldset_proto_depIdxs = []int32{
	1, // 0: anyrow.RowSet.column_schemas:type_name -> anyrow.ColumnSchema
	2, // 1: anyrow.RowSet.rows:type_name -> anyrow.Row
	3, // 2: anyrow.Row.columns:type_name -> anyrow.ColumnValue
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_fieldset_proto_init() }
func file_fieldset_proto_init() {
	if File_fieldset_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fieldset_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RowSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fieldset_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fieldset_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Row); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fieldset_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_fieldset_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*ColumnValue_StringValue)(nil),
		(*ColumnValue_NumberFloatValue)(nil),
		(*ColumnValue_NumberIntegerValue)(nil),
		(*ColumnValue_ObjectValue)(nil),
		(*ColumnValue_ArrayValue)(nil),
		(*ColumnValue_BoolValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fieldset_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fieldset_proto_goTypes,
		DependencyIndexes: file_fieldset_proto_depIdxs,
		MessageInfos:      file_fieldset_proto_msgTypes,
	}.Build()
	File_fieldset_proto = out.File
	file_fieldset_proto_rawDesc = nil
	file_fieldset_proto_goTypes = nil
	file_fieldset_proto_depIdxs = nil
}
